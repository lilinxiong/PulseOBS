cmake_minimum_required(VERSION 3.16...3.26)

include("${CMAKE_CURRENT_SOURCE_DIR}/cmake/common/bootstrap.cmake" NO_POLICY_SCOPE)

project(${_name} VERSION ${_version})

option(ENABLE_FRONTEND_API "Use obs-frontend-api for UI functionality" ON)
option(ENABLE_QT "Use Qt functionality" ON)

include(compilerconfig)
include(defaults)
include(helpers)

add_library(${CMAKE_PROJECT_NAME} MODULE)

find_package(libobs REQUIRED)
target_link_libraries(${CMAKE_PROJECT_NAME} PRIVATE OBS::libobs)

find_package(Eigen3 REQUIRED)
include_directories(${EIGEN3_INCLUDE_DIR})
target_link_libraries(${CMAKE_PROJECT_NAME} PRIVATE Eigen3::Eigen)

if(WIN32)
  set(OpenCV_DIR "C:/tools/opencv/build")
  set(OpenCV_INCLUDE_DIR "C:/tools/opencv/build/include")
  set(OpenCV_LIBRARIES "C:/tools/opencv/build/x64/vc16/lib")
endif()

set(OpenCV_DIR ${CMAKE_SOURCE_DIR}/3rdparty/binary/opencv-macos/lib/cmake/opencv4)

find_package(OpenCV REQUIRED)

if (OpenCV_FOUND)
  message("OpenCV_FOUND:${OpenCV_FOUND}")
  message("OpenCV_INCLUDE_DIR:${OpenCV_INCLUDE_DIR}")
  message("OpenCV_LIBRARIES:${OpenCV_LIBRARIES}")
endif ()

include_directories(${OpenCV_INCLUDE_DIR})
link_directories(${OpenCV_LIBRARIES})
target_link_libraries(${CMAKE_PROJECT_NAME} PRIVATE ${OpenCV_LIBRARIES})

if(ENABLE_FRONTEND_API)
  find_package(obs-frontend-api REQUIRED)
  target_link_libraries(${CMAKE_PROJECT_NAME} PRIVATE OBS::obs-frontend-api)
endif()

if(ENABLE_QT)
  find_package(Qt6 COMPONENTS Widgets Core)
  target_link_libraries(${CMAKE_PROJECT_NAME} PRIVATE Qt6::Core Qt6::Widgets)
  target_compile_options(
    ${CMAKE_PROJECT_NAME} PRIVATE $<$<C_COMPILER_ID:Clang,AppleClang>:-Wno-quoted-include-in-framework-header
                                  -Wno-comma>)
  set_target_properties(
    ${CMAKE_PROJECT_NAME}
    PROPERTIES AUTOMOC ON
               AUTOUIC ON
               AUTORCC ON)
endif()

target_sources(${CMAKE_PROJECT_NAME} PRIVATE src/algorithm/FaceDetection.cpp src/algorithm/HeartRateAlgorithm.cpp
                                             src/plugin-main.cpp src/heart_rate_source.cpp src/heart_rate_source_info.c)

set_target_properties_plugin(${CMAKE_PROJECT_NAME} PROPERTIES OUTPUT_NAME ${_name})
